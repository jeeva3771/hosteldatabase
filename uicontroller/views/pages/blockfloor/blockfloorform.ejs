<%- include('../../partials/header.ejs', { appURL: appURL, title: 'Block floor form' }) %>
<%- include('../../partials/nonloginlayout.ejs', { user: user, subTitle: 'Block floor form' }) %>
<%- include('../../partials/breadcrumb.ejs', { breadCrumbs: breadCrumbs }) %>
<%- include('../../partials/aside.ejs') %>

<section class="section">
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title"></h5>
                    <!-- Horizontal Form -->
                    <form>
                        <div class="row mb-3">
                            <label class="col-sm-2 col-form-label" for="blockCode">Block Code</label>
                            <div class="col-sm-10">
                                <select class="form-select" aria-label="Default select example"
                                    id="blockCode">
                                </select>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <label for="floorNumber" class="col-sm-2 col-form-label">Floor
                                Number</label>
                            <div class="col-sm-10">
                                <input type="number" class="form-control" id="floorNumber">
                            </div>
                        </div>
                        <fieldset class="row mb-3">
                            <legend class="col-form-label col-sm-2 pt-0">Status</legend>
                                <div class="col-sm-10">
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="status"
                                            id="isActive" value="1">
                                        <label class="form-check-label" for="isActive">
                                            Active
                                        </label>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="status"
                                            id="inActive" value="0">
                                        <label class="form-check-label" for="inActive">
                                            InActive
                                        </label>
                                    </div>
                                </div>
                        </fieldset>
                        <div class="text-center">
                            <button type="reset" class="btn btn-secondary">Reset</button>
                            <button type="button" onclick="saveOrUpdateBlockFloor()"
                                class="btn btn-primary" id="submitButton" disabled>Submit</button>
                        </div>
                    </form><!-- End Horizontal Form -->
                </div>
            </div>
        </div>
    </div>
</section>
</main>
<%- include('../../partials/footer.ejs') %>

<script>
    var blockCodeDom = document.getElementById('blockCode');
    var floorNumberDom = document.getElementById('floorNumber');
    var submitButtonDom = document.getElementById('submitButton');
    var blockFloorId = <%= blockFloorId || 'null' %>;

    function saveOrUpdateBlockFloor() {
        const selectedStatusValue = getSelectedRadioValue('status');
        var myHeaders = new Headers();
        myHeaders.append("Content-Type", "application/json");

        var raw = JSON.stringify({
            "blockId": blockCodeDom.value,
            "floorNumber": parseInt(floorNumberDom.value.trim()),
            "isActive": selectedStatusValue
        });

        var requestOptions = {
            method: blockFloorId ? 'PUT' : 'POST',
            headers: myHeaders,
            body: raw
        };

        let url = getAppUrl(`api/blockfloor${blockFloorId ? `/${blockFloorId}` : ''}`);

        fetch(url, requestOptions)
            .then(async (response) => {
                if ([200, 201].includes(response.status)) {
                    window.location = getAppUrl('blockfloor');
                } else {
                    const responseText = await response.json();
                    if (Array.isArray(responseText)) {
                        alert(responseText[0]);
                    } else {
                        alert(responseText);
                    }
                }
        })
            .catch(error => alert('Internal Server Error'));
    }


    function toggleSubmitButton() {
        const selectedStatusValue = getSelectedRadioValue('status');
        submitButtonDom.disabled = !(
            blockCodeDom.value !== 'Select a Block' &&
            floorNumberDom.value.length > 0 &&
            selectedStatusValue !== null)
    }

    async function initializeForm() {
        await populateBlockCode();

        if (blockFloorId) {
            await getBlockFloorById(blockFloorId);
        }

        blockCodeDom.addEventListener('input', toggleSubmitButton);
        floorNumberDom.addEventListener('input', toggleSubmitButton);
        document.querySelectorAll('input[name="status"]').forEach(radio => radio.addEventListener('change',
        toggleSubmitButton));
    }
    initializeForm();

    async function populateBlockCode() {
        try {
            const response = await fetch(getAppUrl('api/block/blockfloor/blockcodecount'));
            const blocks = await response.json();

            blockCodeDom.innerHTML = '<option selected>Select a Block</option>';

            blocks.forEach(block => {
                var option = document.createElement('option');
                option.value = block.blockId;
                option.textContent = block.blockCode;
                blockCodeDom.appendChild(option);
            });

        } catch (error) {
            console.log('Error fetching block codes:', error);
        }
    }

    async function getBlockFloorById(blockFloorId) {
        try {
            const response = await fetch(getAppUrl(`api/blockfloor/${blockFloorId}`));
            const blockFloor = await response.json();

            blockCodeDom.value = blockFloor.blockId;
            floorNumberDom.value = blockFloor.floorNumber;

            if (blockFloor.isActive) {
                document.getElementById('isActive').checked = true;
            } else {
                document.getElementById('inActive').checked = true;
            }
        } catch (error) {
            console.error('Error fetching block floor details:', error);
        }
    }

</script>