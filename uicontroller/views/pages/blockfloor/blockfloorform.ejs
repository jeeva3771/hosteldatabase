<%- include('../../partials/header.ejs',{ appURL: appURL, isMenuVisible : true, title: 'Blockfloor',
isSubTitleAndBreadCrumbVisible: true, subTitle: 'Block floor' breadCrumb: breadCrumb}) %>

<section class="section">
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Block Floor Form</h5>

                    <!-- Horizontal Form -->
                    <form>
                        <div class="row mb-3">
                            <label class="col-sm-2 col-form-label" for="blockCode">Block Code</label>
                            <div class="col-sm-10">
                              <select class="form-select" aria-label="Default select example" id="blockCode">
                              </select>
                            </div>
                          </div>
                        <div class="row mb-3">
                            <label for="floorNumber" class="col-sm-2 col-form-label">Floor Number</label>
                            <div class="col-sm-10">
                              <input type="number" class="form-control" id="floorNumber">
                            </div>
                          </div>
                        <fieldset class="row mb-3">
                            <legend class="col-form-label col-sm-2 pt-0">Status</legend>
                            <div class="col-sm-10">
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="status"
                                        id="isActive" value="1" >
                                    <label class="form-check-label" for="isActive">
                                        Active
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="status"
                                        id="inActive" value="0">
                                    <label class="form-check-label" for="inActive">
                                        InActive
                                    </label>
                                </div>
                            </div>
                        </fieldset>

                        <div class="text-center">
                            <input type="hidden" id="blockFloorId" value="<%=blockFloorId %>" />
                            <button type="submit" onclick="saveOrUpdateBlockFloor()" class="btn btn-primary"
                                id="submitButton" disabled>Submit</button>
                            <button type="reset" class="btn btn-secondary">Reset</button>
                        </div>
                    </form><!-- End Horizontal Form -->
                </div>
            </div>
            </div>
        </div>
    </section>

    
    <%- include('../../partials/footer.ejs') %>
        <script>
            var blockCode = document.getElementById('blockCode');
            var floorNumber = document.getElementById('floorNumber');
            var selectedStatus = document.querySelectorAll('input[name="status"]');
            var submitButton = document.getElementById('submitButton');
            var blockFloorId = document.getElementById('blockFloorId').value;

            function getSelectedStatus() {
                let selectedStatusValue = null;
                selectedStatus.forEach(radio => {
                    if (radio.checked) {
                        selectedStatusValue = parseInt(radio.value);
                    }
                });
                return selectedStatusValue;
            }

            function saveOrUpdateBlockFloor() {
                const selectedStatusValue = getSelectedStatus();
                var myHeaders = new Headers();
                myHeaders.append("Content-Type", "application/json");

                var raw = JSON.stringify({
                    "blockId": blockCode.value,
                    "floorNumber": parseInt(floorNumber.value),
                    "isActive": selectedStatusValue
                });

                var requestOptions = {
                    method: blockFloorId ? 'PUT' : 'POST',
                    headers: myHeaders,
                    body: raw
                };

                let url = "http://localhost:1005/api/blockfloor";
                if (blockFloorId) {
                    url = url + '/' + blockFloorId
                }

                fetch(url, requestOptions)
                    .then(response => response.text())
                    .then(blockFloors => window.location = '/blockfloor')
                    .catch(error => console.error('error', error));
            }

            function toggleSubmitButton() {
                const selectedStatusValue = getSelectedStatus();
                submitButton.disabled = !(
                    blockCode.value !== 'Select' &&
                    floorNumber.value.length > 0 &&
                    selectedStatusValue !== null
                )
            }

            async function initializeForm() {
                await populateBlockCode();

                if (blockFloorId) {
                    await getBlockFloorById(blockFloorId);
                }

                blockCode.addEventListener('input', toggleSubmitButton);
                floorNumber.addEventListener('input', toggleSubmitButton);
                document.querySelectorAll('input[name="status"]').forEach(radio => radio.addEventListener('change', toggleSubmitButton));
            }
            initializeForm();

            async function populateBlockCode() {
                try {
                    const response = await fetch('http://localhost:1005/api/block/blockfloor/blockcodecount');
                    const blocks = await response.json();

                    const activeOptions = [];
                    const disabledOptions = [];

                    blockCode.innerHTML = '<option selected>Select a Block</option>';

                    blocks.forEach(block => {
                        const option = document.createElement('option');
                        option.value = block.blockId;
                        option.textContent = `${block.blockCode} (Floors : ${block.floorCount})`;
                        if (block.floorCount === 0) {
                            option.disabled = true;
                            disabledOptions.push(option);
                        } else {
                            activeOptions.push(option);
                        }
                    });

                    activeOptions.forEach(option => {
                        blockCode.appendChild(option);
                    });

                    disabledOptions.forEach(option => {
                        blockCode.appendChild(option);
                    });

                } catch (error) {
                    console.log('Error fetching block codes:', error);
                }
            }

            async function getBlockFloorById(blockFloorId) {
                try {
                    const response = await fetch(`http://localhost:1005/api/blockfloor/${blockFloorId}`);
                    const blockFloor = await response.json();

                    blockCode.value = blockFloor.blockId;
                    floorNumber.value = blockFloor.floorNumber;

                    if (blockFloor.isActive) {
                        document.getElementById('isActive').checked = true;
                    } else {
                        document.getElementById('inActive').checked = true;
                    }
                } catch (error) {
                    console.error('Error fetching block floor details:', error);
                }
            }


        </script>