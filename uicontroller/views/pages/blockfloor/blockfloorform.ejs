<html>

<head>
    <%- include('../../partials/head') %>

        <style>
            .container {
                display: flex;
                flex-direction: column;
                justify-content: center;
                margin-top: 40px;
                border-radius: 8px;
                padding: 30px;
                width: 380px;
            }

            .submission {
                margin-top: 10px;
                display: flex;
                justify-content: center;
                gap: 14px;
            }
        </style>
</head>

<body>
    <a href="/blockfloor" class="exits">
        <svg xmlns="http://www.w3.org/2000/svg" width="40" height="50" fill="currentColor"
            class="bi bi-arrow-left-short" viewBox="0 0 16 16">
            <path fill-rule="evenodd"
                d="M12 8a.5.5 0 0 1-.5.5H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5a.5.5 0 0 1 .5.5" />
        </svg>
    </a>
    <div class="container">
        <h2 class="label">Blockfloor</h2>
        <div class="form-group">
            <label for="blockCode">BlockCode</label>
            <select class="form-control" id="blockCode">
            </select>
        </div>
        <div class="form-group">
            <label for="floorNumber">FloorNumber</label>
            <input type="number" class="form-control" id="floorNumber">
        </div>
        <div class="form-group">
            <label for="status">Status</label><br>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" name="status" id="isActive" value="1">
                <label class="form-check-label" for="isActive">Active</label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" name="status" id="inActive" value="0">
                <label class="form-check-label" for="inActive">Inactive</label>
            </div>
        </div>
        <div class="form-group">
            
        </div>
        <div class="submission">
            <input type="hidden" id="blockFloorId" value="<%=blockFloorId %>" />
            <button onclick="saveOrUpdateBlockFloor()" class="btn btn-success" id="submitButton" disabled>Submit</button>
        </div>
    </div>
</body>
<script>
    var blockCode = document.getElementById('blockCode');
    var floorNumber = document.getElementById('floorNumber');
    var selectedStatus = document.querySelector('input[name="status"]');
    var submitButton = document.getElementById('submitButton');
    var blockFloorId = document.getElementById('blockFloorId').value;


    function saveOrUpdateBlockFloor() {
        var myHeaders = new Headers();
        myHeaders.append("Content-Type", "application/json");

        var raw = JSON.stringify({
            "blockId": blockCode.value,
            "floorNumber": parseInt(floorNumber.value),
            "isActive": parseInt(selectedStatus.checked.value)
        });

        var requestOptions = {
            method: blockFloorId ? 'PUT' : 'POST',
            headers: myHeaders,
            body: raw
        };

        let url = "http://localhost:1000/api/blockfloor";
        if (blockFloorId) {
            url = url + '/' + blockFloorId
        }

        fetch(url, requestOptions)
            .then(response => response.text())
            .then(blockFloors => window.location = '/blockfloor')
            .catch(error => console.error('error', error));
    }

    function populateBlockCode() {
        fetch("http://localhost:1000/api/block")
            .then(response => response.json())
            .then(responseData => {
                const { blocks } = responseData
                var optionsList = '<option selected>Select</option>'
                for (var i = 0; i < blocks.length; i++) {
                    var opt = blocks[i]
                    optionsList += `<option value="${opt.blockId}">${opt.blockCode}</option>`
                }
                blockCode.innerHTML = optionsList
            })
            .catch(error => console.log('error', error));
    }
    populateBlockCode()

    if (blockFloorId) {
        getBlockFloor(blockFloorId)
    }

    function getBlockFloor(blockFloorId) {
        const requestOptions = {
            method: "GET"
        };

        fetch("http://localhost:1000/api/blockfloor/" + blockFloorId, requestOptions)
            .then((response) => response.json())
            .then((blockFloor) => {
                blockCode.value = blockFloor.blockId
                floorNumber.value = blockFloor.floorNumber
                if (blockFloor.isActive) {
                    document.getElementById('isActive').checked = true;
                } else {
                    document.getElementById('inActive').checked = true;
                }
            })
            .catch((error) => console.error(error));
    }

    function toggleSubmitButton() {
        submitButton.disabled = !(
            blockCode.value !== 'Select' &&
            floorNumber.value.length > 0 &&
            selectedStatus &&
            createdBy.value !== 'Select'
        )
    }
    
    blockCode.addEventListener('input', toggleSubmitButton);
    floorNumber.addEventListener('input', toggleSubmitButton);
    document.querySelectorAll('input[name="status"]').forEach(radio => radio.addEventListener('change', toggleSubmitButton));
</script>

</html>
