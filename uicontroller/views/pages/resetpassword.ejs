<%- include('../partials/header.ejs', { isMenuVisible : false, title: 'ResetPassword' , breadcrumb: []}) %>
    <div class="row justify-content-center mt-5">
        <div class="col-4">
            <div class="border">
                <form>
                    <h3 class="font-weight-bold text-center mb-3">Forgotten Password ?</h3>
                    <div id="emailValid">
                        <div class="mb-3">
                            <label for="emailId" class="form-label">Email</label>
                            <input type="text" class="form-control" id="emailId" placeholder="Enter email"
                                aria-describedby="emailHelp" onkeyup="toggleButton()">
                            <small id="emailError" class="errorContent"></small>
                        </div>
                        <div class="col d-flex justify-content-center mb-2">
                            <button type="button" class="btn btn-primary" id="sendOtp" onclick="generateOtp()"
                                disabled>Generate OTP</button>
                        </div>
                    </div>
                    <div id="additionalFields" class="hidden">
                        <p class="fs-6 fw-medium">Please enter the 6-digit code sent to your email.</p>
                        <div class="mb-3">
                            <label for="otp" class="form-label">OTP</label>
                            <input type="text" class="form-control" id="otp" onkeyup="toggleButton()"
                                placeholder="Enter OTP">
                            <div class="d-flex justify-content-between">
                                <small id="otpError" class="errorContent text-danger"></small>
                                <small class="justify-content-end"><a href="javascript:void(0);" onclick="generateOtp()"
                                        class="text-end link-primary small text-decoration-none">Resend OTP</a></small>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <input type="password" class="form-control" id="password" onkeyup="toggleButton()"
                                placeholder="Enter password">
                        </div>
                        <div class="mb-3">
                            <label for="confirmPassword" class="form-label">Confirm Password</label>
                            <input type="password" class="form-control" id="confirmPassword"
                                placeholder="Enter confirm password" onkeyup="toggleButton()">
                            <small id="passwordError" class="errorContent"></small>
                        </div>
                        <div class="col d-flex justify-content-center mb-2">
                            <button type="button" class="btn btn-primary" id="submit" onclick="resetPassword()"
                                disabled>Verify
                                OTP & Save Password</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="modal fade" id="errorModal" tabindex="-1" aria-labelledby="errorModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="errorModalLabel">Session Expired</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="errorModalBody">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal"
                        id="redirectButton">OK</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        var emailId = document.getElementById('emailId');
        var sendOtp = document.getElementById('sendOtp');
        var additionalFields = document.getElementById('additionalFields');
        var otp = document.getElementById('otp');
        var password = document.getElementById('password');
        var confirmPassword = document.getElementById('confirmPassword');
        var emailValid = document.getElementById('emailValid');
        var emailError = document.getElementById('emailError');
        var otpError = document.getElementById('otpError');
        var submit = document.getElementById('submit');
        var errorModal = document.getElementById('errorModal');
        var errorModalBody = document.getElementById('errorModalBody');
        var redirectButton = document.getElementById('redirectButton');


        function toggleButton() {
            sendOtp.disabled = !(emailId.value.length > 0)
            submit.disabled = !(
                otp.value.length > 0 &&
                password.value.length > 0 &&
                password.value === confirmPassword.value
            )
        }

        function generateOtp() {
            var myHeaders = new Headers();
            myHeaders.append("Content-Type", "application/json");

            var raw = JSON.stringify({
                "emailId": emailId.value
            });

            var requestOptions = {
                method: 'POST',
                headers: myHeaders,
                body: raw,
                redirect: 'follow'
            };

            fetch("http://localhost:1005/api/warden/generateotp", requestOptions)
                .then(async (response) => {
                    if (response.status === 200) {
                        emailValid.style.display = 'none'
                        additionalFields.style.display = 'block'
                    } else {
                        emailError.innerText = await response.text()
                        emailError.style.display = 'block'
                    }
                })
                .catch(error => console.log('error', error));
        }

        function resetPassword() {
            var myHeaders = new Headers();
            myHeaders.append("Content-Type", "application/json");

            var raw = JSON.stringify({
                "otp": otp.value,
                "password": password.value
            });

            var requestOptions = {
                method: 'PUT',
                headers: myHeaders,
                body: raw,
                redirect: 'follow'
            };

            fetch("http://localhost:1005/api/warden/resetpassword", requestOptions)
                .then(async (response) => {
                    if (response.status === 200) {
                        if (password.value.length < 6) {
                            passwordError.innerText = 'Password must be at least 6 characters long.'
                            return passwordError.style.display = 'block';
                        }
                        window.location = '/login';
                    } else if (response.status === 400) {
                        const errorData = await response.json();

                        if (errorData.errorType === 'OTP') {
                            otpError.innerText = errorData.message;
                            otpError.style.display = 'block';
                            if (password.value.length < 6) {
                                passwordError.innerText = 'Password must be at least 6 characters long.'
                                passwordError.style.display = 'block';
                            }
                        } else {
                            passwordError.innerText = 'Password must be at least 6 characters long.'
                            passwordError.style.display = 'block';
                        }
                    } else if (response.status === 401 || 404) {
                        const errorMessage = await response.text();
                        errorModalBody.innerText = errorMessage;

                        const modalInstance = new bootstrap.Modal(errorModal);
                        modalInstance.show()

                        redirectButton.addEventListener('click', function () {
                            window.location = '/login';
                        });
                    }
                })
                .catch(error => console.log('error', error));
        }

        function hideError(input, errorElement) {
            input.addEventListener('input', function () {
                errorElement.style.display = 'none';
            });
        }

        hideError(emailId, emailError);
        hideError(otp, otpError);
        hideError(password, passwordError);
        hideError(confirmPassword, passwordError);


    </script>
    <%- include('../partials/footer.ejs') %>
