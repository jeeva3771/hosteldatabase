<%- include('../../partials/header.ejs', { isMenuVisible : true, title: 'Attendancepage' }) %>

    <select class="form-select form-select-lg mb-3 pageCount" aria-label=".form-select-lg example" id="limit"
        onchange="changeLimit()">
        <option value="50" href="#">50</option>
        <option value="100" href="#" selected>100</option>
        <option value="150" href="#">150</option>
        <option value="200" href="#">200</option>
    </select>
    <a class="btn btn-info" href="/attendance/add">Add</a>
    <table class="table table-striped table-hover table-bordered">
        <thead>
            <tr>
                <th scope="col">Sno</th>
                <th scope="col" onclick="sortByColumn('studentId')">Student Name</th>
                <th scope="col" onclick="sortByColumn('checkInDate')">CheckIn Date</th>
                <th scope="col" onclick="sortByColumn('isPresent')">Is Present</th>
                <th scope="col" onclick="sortByColumn('wardenId')">Reviewed Warden</th>
                <th scope="col">Action</th>
            </tr>
        </thead>
        <tbody id="attendancesData">
            <tr>
                <td>
                    <div class="d-flex justify-content-center">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden"></span>
                        </div>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
    <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-center" id="pagination">
        </ul>
    </nav>
    <%- include('../../partials/footer.ejs') %>
        <script>
            var currentPage = 1;
            var tableData = document.getElementById("attendancesData");
            var limit = document.getElementById("limit").value;
            var paginationDom = document.getElementById("pagination");
            var columnSortOrders = {
                studentId: 'ASC',
                registerNumber: 'ASC',
                checkInDate: 'ASC',
                isPresent: 'ASC',
                wardenId: 'ASC'
            };

            var currentColumn = 'createdAt';
            var url = `&orderby=a.${currentColumn}&sort=DESC`;

            function changeLimit() {
                limit = document.getElementById("limit").value
                attendancePage()
            }

            function sortByColumn(column, sortOrder) {
                columnSortOrders[column] = sortOrder;
                currentColumn = column;
                url = `&orderby=a.${currentColumn}&sort=${sortOrder}`;
                wardenPage(currentPage);
            }

            function attendancePage(pageNo = 1) {
                currentPage = pageNo
                var requestOptions = {
                    method: 'GET'
                };

                fetch(`http://localhost:1000/api/attendance?limit=${limit}&page=${pageNo}` + url, requestOptions)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok ' + response.statusText);
                        }
                        return response.json();
                    })
                    .then(responseData => {
                        const { attendances, attendanceCount } = responseData;

                        var trHtml = ''
                        for (var i = 0; i < attendances.length; i++) {
                            var attendance = attendances[i]
                            trHtml = trHtml + `<tr>
                            <td>${(pageNo - 1) * limit + i + 1}</td>
                            <td>${attendance.name}</td>
                            <td>${attendance.checkIn}</td>
                            <td>${attendance.isPresent}</td>
                            <td>${attendance.reviewedWardenFirstName} ${attendance.reviewedWardenLastName}</td>
                            <td>
                                <a href="/attendance/${attendance.attendanceId}"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                                    <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
                                    <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z"/>
                                </svg></a>
                            </td>
                        </tr>`
                        }
                        tableData.innerHTML = trHtml
                        var totalPages = Math.ceil(responseData.attendanceCount / limit)
                        var paginationHtml = ''
                        for (var i = 1; i <= totalPages; i++) {
                            paginationHtml += `<li class="page-item">
                          <a class="page-link" href="#" onclick="attendancePage(${i})">${i}</a>
                       </li>`;
                        }
                        paginationDom.innerHTML = paginationHtml;
                    })
                    .catch((error) => console.error(error));
            }

            window.addEventListener('load', () => {
                attendancePage()
            })

        </script>

        </html>