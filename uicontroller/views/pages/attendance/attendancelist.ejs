<%- include('../../partials/header.ejs', { appURL: appURL, title: 'Attendance List' }) %>
<%- include('../../partials/nonloginlayout.ejs', { user: user, subTitle: 'Attendance List' }) %>
<%- include('../../partials/breadcrumb.ejs', { breadCrumbs: breadCrumbs }) %>
<%- include('../../partials/aside.ejs') %>

<section class="section">
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body">
                    <div class="datatable-top mt-4">
                        <div class="datatable-search d-flex justify-content-between align-items-center">
                            <!-- Search and entries per page -->
                            <div class="d-flex gap-2">
                                <div class="datatable-search">
                                    <input class="datatable-input" id="searchInput"
                                        oninput="handleSearch()" placeholder="Search..." type="search"
                                        name="search" title="Search within table">
                                </div>
                            <div class="datatable-dropdown">
                                <label>
                                    <select class="datatable-selector cursor" name="per-page" id="limit"
                                    onchange="changeLimit()">
                                    <option value="50">50</option>
                                    <option value="100" selected>100</option>
                                    <option value="200">200</option>
                                    <option value="-1">All</option>
                                    </select> entries per page
                                </label>
                                <a href="<%=appURL%>attendance/report/" class="btn btn-secondary">Report</a>
                            </div>
                        </div>
                    </div>
                    <div class="d-flex justify-content-end">
                        <a href="<%=appURL%>attendance/add/" class="btn btn-primary">Take Attendance</a>
                    </div>
                </div>        

                <table class="table table-striped table-hover table-bordered">
                    <thead>
                        <tr>
                            <th scope="col">Sno</th>
                            <th scope="col">Student Name
                                <!-- <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20"
                                    fill="currentColor" class="bi bi-arrow-down-short sortIcon"
                                    viewBox="0 0 16 16" onclick="sortByColumn('name', 'DESC')">
                                    <path fill-rule="evenodd"
                                    d="M8 4a.5.5 0 0 1 .5.5v5.793l2.146-2.147a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L7.5 10.293V4.5A.5.5 0 0 1 8 4" />
                                </svg>
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20"
                                    fill="currentColor" class="bi bi-arrow-up-short sortIcon"
                                    viewBox="0 0 16 16" onclick="sortByColumn('name', 'ASC')">
                                    <path fill-rule="evenodd"
                                    d="M8 12a.5.5 0 0 0 .5-.5V5.707l2.146 2.147a.5.5 0 0 0 .708-.708l-3-3a.5.5 0 0 0-.708 0l-3 3a.5.5 0 1 0 .708.708L7.5 5.707V11.5a.5.5 0 0 0 .5.5" />
                                </svg> -->
                            </th>
                            <th scope="col">Register Number
                                <!-- <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20"
                                    fill="currentColor" class="bi bi-arrow-down-short sortIcon"
                                    viewBox="0 0 16 16"
                                    onclick="sortByColumn('registerNumber', 'DESC')">
                                    <path fill-rule="evenodd"
                                    d="M8 4a.5.5 0 0 1 .5.5v5.793l2.146-2.147a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L7.5 10.293V4.5A.5.5 0 0 1 8 4" />
                                </svg>
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20"
                                fill="currentColor" class="bi bi-arrow-up-short sortIcon"
                                viewBox="0 0 16 16"
                                onclick="sortByColumn('registerNumber', 'ASC')">
                                <path fill-rule="evenodd"
                                d="M8 12a.5.5 0 0 0 .5-.5V5.707l2.146 2.147a.5.5 0 0 0 .708-.708l-3-3a.5.5 0 0 0-.708 0l-3 3a.5.5 0 1 0 .708.708L7.5 5.707V11.5a.5.5 0 0 0 .5.5" />
                            </svg> -->
                        </th>
                        <th scope="col">Check-in Date
                            <!-- <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20"
                                fill="currentColor" class="bi bi-arrow-down-short sortIcon"
                                viewBox="0 0 16 16"
                                onclick="sortByColumn('checkInDate', 'DESC')">
                                <path fill-rule="evenodd"
                                d="M8 4a.5.5 0 0 1 .5.5v5.793l2.146-2.147a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L7.5 10.293V4.5A.5.5 0 0 1 8 4" />
                            </svg>
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20"
                                fill="currentColor" class="bi bi-arrow-up-short sortIcon"
                                viewBox="0 0 16 16" onclick="sortByColumn('checkInDate', 'ASC')">
                                <path fill-rule="evenodd"
                                d="M8 12a.5.5 0 0 0 .5-.5V5.707l2.146 2.147a.5.5 0 0 0 .708-.708l-3-3a.5.5 0 0 0-.708 0l-3 3a.5.5 0 1 0 .708.708L7.5 5.707V11.5a.5.5 0 0 0 .5.5" />
                            </svg> -->
                        </th>
                        <th scope="col">Is Present
                            <!-- <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20"
                                fill="currentColor" class="bi bi-arrow-down-short sortIcon"
                                viewBox="0 0 16 16" onclick="sortByColumn('isPresent', 'DESC')">
                                <path fill-rule="evenodd"
                                d="M8 4a.5.5 0 0 1 .5.5v5.793l2.146-2.147a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L7.5 10.293V4.5A.5.5 0 0 1 8 4" />
                            </svg>
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20"
                                fill="currentColor" class="bi bi-arrow-up-short sortIcon"
                                viewBox="0 0 16 16" onclick="sortByColumn('isPresent', 'ASC')">
                                <path fill-rule="evenodd"
                                d="M8 12a.5.5 0 0 0 .5-.5V5.707l2.146 2.147a.5.5 0 0 0 .708-.708l-3-3a.5.5 0 0 0-.708 0l-3 3a.5.5 0 1 0 .708.708L7.5 5.707V11.5a.5.5 0 0 0 .5.5" />
                            </svg> -->
                        </th>
                        <th scope="col">Action</th>
                    </tr>
                </thead>
                <tbody id="attendancesData">
                    <tr>
                        <td colspan="6" class="text-center">
                            <div class="spinner-border" role="status"></div>
                        </td>
                    </tr>
                </tbody>
            </table>
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-center cursor" id="pagination"></ul>
            </nav>
        </div>
        </div>
    </div>
</div>
</div>
</section>

</main><!-- End #main -->

<%- include('../../partials/footer.ejs') %>
        <script>
            var currentPage = 1;
            var searchQuery = '';
            var searchReport = '';
            var tableData = document.getElementById("attendancesData");
            var limit = document.getElementById("limit").value;
            var paginationDom = document.getElementById("pagination");
            const existingModal = document.getElementById('attendanceModal');
            var monthSelect = document.getElementById("monthSelect");
            var yearSelect = document.getElementById("yearSelect");
            var dateLabel = document.getElementById('dateLabel');
            var columnSortOrders = {
                name: 'ASC',
                registerNumber: 'ASC',
                checkInDate: 'ASC',
                isPresent: 'ASC'
            };

            function changeLimit() {
                attendancePage()
            }

            function handleSearch() {
                attendancePage();
            }

            // function sortByColumn(column, sortOrder) {
            //     columnSortOrders[column] = sortOrder;
            //     currentColumn = column;

            //     if (column === 'name') {
            //         url = `&orderby=bk.${currentColumn}&sort=${sortOrder}`;
            //     } else {
            //         url = `&orderby=b.${currentColumn}&sort=${sortOrder}`;
            //     }                            

            //     const activeIcons = document.querySelectorAll(`[onclick*="${column}"]`);
            //     activeIcons.forEach(icon => {
            //         icon.classList.remove('light');
            //         icon.classList.add('dark');
            //     });

            //     attendancePage();
            // }

            const currentTime = new Date();
            const currentYear = currentTime.getFullYear();
            const yearRange = 20;

            var currentColumn = 'createdAt';
            var url = `&orderby=a.${currentColumn}&sort=DESC`;

            function populateDropDown() {
                for (let i = 0; i < 12; i++) {
                    var monthOption = document.createElement('option')
                    monthOption.value = i
                    monthOption.textContent = new Date(0, i).toLocaleString('default', { month: 'long' });
                    monthSelect.appendChild(monthOption)
                }

                for (let i = currentYear - yearRange; i <= currentYear; i++) {
                    var yearOption = document.createElement('option')
                    yearOption.value = i
                    yearOption.textContent = i
                    yearSelect.appendChild(yearOption)
                }

                monthSelect.value = currentTime.getMonth()
                yearSelect.value = currentYear
            }

            function sortByColumn(column, sortOrder) {
                columnSortOrders[column] = sortOrder
                currentColumn = column
                url = `&orderby=a.${currentColumn}&sort=${sortOrder}`
                const activeIcons = document.querySelectorAll(`[onclick*="${column}"]`);
                activeIcons.forEach(icon => {
                    icon.classList.remove('light');
                    icon.classList.add('dark');
                });

                attendancePage();
            }

            function attendancePage(pageNo = 1) {
                var requestOptions = {
                    method: 'GET'
                }

                fetch(`http://localhost:1005/api/attendance?limit=${limit.value}&page=${pageNo}` + url + `&search=${searchQuery}`, requestOptions)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok ' + response.statusText)
                        }
                        return response.json()
                    })
                    .then(responseData => {
                        const { attendances, attendanceCount } = responseData

                        var trHtml = ''
                        for (var i = 0; i < attendances.length; i++) {
                            var attendance = attendances[i]
                            trHtml = trHtml + `<tr>
                            <td>${(pageNo - 1) * limit + i + 1}</td>
                            <td>${attendance.name}</td>
                            <td>${attendance.registerNumber}</td>
                            <td>${attendance.checkIn}</td>
                            <td>${attendance.isPresent === 1 ? 'Present' : 'Absent'}</td>
                            <td>
                               <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-info-circle mr-2 focus" viewBox="0 0 16 16" onclick="readAttendanceById(${attendance.attendanceId})">
                                <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16"/>
                                <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0"/>
                                </svg>
                                 <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-pencil-square mr-2 focus" viewBox="0 0 16 16" onclick="editAttendance(${attendance.blockId}, ${attendance.blockFloorId}, ${attendance.roomId}, '${attendance.checkIn}')">
                                    <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
                                    <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z"/>
                                </svg>
                            </td>
                        </tr>`
                        }
                        tableData.innerHTML = trHtml
                        var totalPages = Math.ceil(responseData.attendanceCount / limit)
                        var paginationHtml = ''
                        if (totalPages === 0) {
                    paginationHtml = '<h6>No results found.</h6>'
                } 

                if (totalPages > 1) {
                    paginationHtml += `
                    <li class="page-item${pageNo === 1 ? ' disabled' : ''}">
                        <a class="page-link" onclick="attendancePage(${pageNo - 1})">Previous</a>
                    </li>`;

                    for (let i = 1; i <= totalPages; i++) {
                        paginationHtml += `
                        <li class="page-item${i === pageNo ? ' active' : ''}">
                        <a class="page-link" onclick="attendancePage(${i})">${i}</a>
                        </li>`;
                    }

                    paginationHtml += `
                    <li class="page-item${pageNo === totalPages ? ' disabled' : ''}">
                        <a class="page-link" onclick="attendancePage(${pageNo + 1})">Next</a>
                    </li>`;
                }
                paginationDom.innerHTML = paginationHtml;
            })
                .catch((error) => console.error(error));
        }


            function editAttendance(blockId, blockFloorId, roomId, checkIn) {
                window.location.href = `/attendance/add?blockId=${blockId}&blockFloorId=${blockFloorId}&roomId=${roomId}&checkIn=${encodeURIComponent(checkIn)}`;
            }

            function readAttendanceById(attendanceId) {
                var myHeaders = new Headers()
                var requestOptions = {
                    method: 'GET',
                    headers: myHeaders
                };

                fetch("http://localhost:1005/api/attendance/" + attendanceId, requestOptions)
                    .then(response => response.json())
                    .then(attendance => {

                        if (existingModal) {
                            existingModal.remove()
                        }
                        const modalHtml = `
                        <div class="modal fade" id="attendanceModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="exampleModalLabel">Full Details</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <div class="row">
                                            <div class="col-sm-4">
                                                <strong>Name</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                <strong> : </strong>${attendance.name}
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-4">
                                                <strong>Register Number</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                <strong> : </strong>${attendance.registerNumber}
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-4">
                                                <strong>Check-in Date</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                <strong> : </strong>${attendance.checkIn}
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-4">
                                                <strong>Block Code</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                <strong> : </strong>${attendance.blockCode}
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-4">
                                                <strong>Floor Number</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                <strong> : </strong>${attendance.floorNumber}
                                            </div>
                                        </div>
                                         <div class="row">
                                            <div class="col-sm-4">
                                                <strong>Room Number</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                <strong> : </strong>${attendance.roomNumber}
                                            </div>
                                        </div>
                                           <div class="row">
                                            <div class="col-sm-4">
                                                <strong>Is Present</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                <strong> : </strong>${attendance.isPresent === 1 ? 'Present' : 'Absent'}
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-4">
                                                <strong>Reviewed Warden	</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                <strong> : </strong>${attendance.reviewedWardenFirstName} ${attendance.reviewedWardenLastName}
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-4">
                                                <strong>Created At</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                <strong> : </strong>${attendance.createdTimeStamp}
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-4">
                                                <strong>Updated At</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                <strong> : </strong>${attendance.updatedTimeStamp}
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-4">
                                                <strong>Updated By</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                <strong> : </strong>${attendance.updatedWardenFirstName !== null ? attendance.updatedWardenFirstName : '---'} ${attendance.updatedWardenLastName !== null ? attendance.updatedWardenLastName : ''}
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>`;
                        document.body.insertAdjacentHTML('beforeend', modalHtml)
                        var modal = new bootstrap.Modal(document.getElementById('attendanceModal'))
                        modal.show();

                    })
                    .catch(error => console.log('error', error))
            }
            
            window.addEventListener('load', () => {
                attendancePage()
            })

        </script>