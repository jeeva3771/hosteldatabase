<%- include('../../partials/header.ejs',{ appURL: appURL, isMenuVisible : true, title: 'Room List' ,
    isSubTitleAndBreadCrumbVisible: true, subTitle: 'Room' , breadCrumb: breadCrumb}) %>
    <%- include('../../partials/aside.ejs') %>

        <section class="section">
            <div class="row">
                <div class="col-lg-12">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Room</h5>
                            <div class="d-flex justify-content-end mb-1"><a href="/room/add"
                                    class="btn btn-primary">Add</a></div>

                            <div class="datatable-top">
                                <div class="datatable-search">
                                    <input class="datatable-input" id="searchInput" onkeyup="handleSearch(event)"
                                        placeholder="Search blockcode, floornumber, roomnumber, createdby" type="search"
                                        name="search" title="Search within table">
                                </div>
                                <div class="datatable-dropdown">
                                    <label>
                                        <select class="datatable-selector" name="per-page" id="limit"
                                            onchange="changeLimit()">
                                            <option value="5">5</option>
                                            <option value="10" selected="">10</option>
                                            <option value="15">15</option>
                                            <option value="-1">All</option>
                                        </select> entries per page
                                    </label>
                                </div>
                            </div>

                            <table class="table table-striped table-hover table-bordered">
                                <thead>
                                    <tr>
                                        <th scope="col">Sno</th>
                                        <th scope="col" onclick="sortByColumn('blockId')">Block Code</th>
                                        <th scope="col" onclick="sortByColumn('blockFloorId')">Floor Number</th>
                                        <th scope="col" onclick="sortByColumn('roomNumber')">Room Number</th>
                                        <th scope="col" onclick="sortByColumn('isActive')">Status</th>
                                        <th scope="col" onclick="sortByColumn('createdBy')">Created By</th>
                                        <th scope="col">Action</th>
                                    </tr>
                                </thead>
                                <tbody id="roomsData">

                                </tbody>
                            </table>
                            <nav aria-label="Page navigation example">
                                <ul class="pagination justify-content-center" id="pagination">

                                </ul>
                            </nav>
                        </div>
                        <script>
                            var currentPage = 1;
                            var searchQuery = ''
                            var tableData = document.getElementById("roomsData");
                            var limit = document.getElementById("limit").value;
                            var paginationDom = document.getElementById("pagination");
                            var orderIcon = document.querySelectorAll('.sortIcon');
                            var searchDom = document.getElementById("searchInput");
                            var columnSortOrders = {
                                blockId: 'ASC',
                                floorNumber: 'ASC',
                                roomNumber: 'ASC',
                                isActive: 'ASC'
                            };
                            var currentColumn = 'createdAt';
                            var url = `&orderby=r.${currentColumn}&sort=DESC`;

                            function changeLimit() {
                                limit = document.getElementById("limit").value
                                roomPage()
                            }

                            function handleSearch(event) {
                                event.preventDefault();
                                searchQuery = searchDom.value;
                                roomPage();
                            }

                            function sortByColumn(column, sortOrder) {
                                columnSortOrders[column] = sortOrder;
                                currentColumn = column;
                                url = `&orderby=b.${currentColumn}&sort=${sortOrder}`;

                                const activeIcons = document.querySelectorAll(`[onclick*="${column}"]`);
                                activeIcons.forEach(icon => {
                                    icon.classList.remove('light');
                                    icon.classList.add('dark');
                                });

                                roomPage(currentPage);
                            }

                            function roomPage(pageNo = 1) {
                                currentPage = pageNo
                                var requestOptions = {
                                    method: 'GET'
                                };

                                fetch(`http://localhost:1005/api/room?limit=${limit}&page=${pageNo}` + url + `&search=${encodeURIComponent(searchQuery)}`, requestOptions)
                                    .then(response => response.json())
                                    .then(responseData => {
                                        const { rooms, roomCount } = responseData;
                                        var trHtml = ''
                                        for (var i = 0; i < rooms.length; i++) {
                                            var room = rooms[i]
                                            trHtml = trHtml + `<tr>
                                                <td>${(pageNo - 1) * limit + i + 1}</td>
                                                <td>${room.blockCode}</td>
                                                <td>${room.floorNumber}</td>
                                                <td>${room.roomNumber}</td>
                                                <td>${room.isActive === 1 ? 'Active' : ''}</td>
                                                <td>${room.createdFirstName} ${room.createdLastName}</td>
                                                <td>
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-info-circle focus mr-2" viewBox="0 0 16 16" onclick="readRoomById(${room.roomId})">
                                                    <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16"/>
                                                    <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0"/>
                                                    </svg>
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-pencil-square mr-2 focus" viewBox="0 0 16 16" onclick="editRoomById(${room.roomId})">
                                                        <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
                                                        <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z"/>
                                                    </svg>
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-trash focus mr-2" onClick="deleteRoomById(${room.roomId})" viewBox="0 0 16 16">
                                                    <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z"/>
                                                        <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z"/>
                                                    </svg>
                                                </td>
                                            </tr>`
                                        }

                                        tableData.innerHTML = trHtml
                                        var totalPages = Math.ceil(responseData.roomCount / limit)
                                        var paginationHtml = ''

                                        if (totalPages > 1) {
                                            paginationHtml += `
                                                    <li class="page-item${currentPage === 1 ? ' disabled' : ''}">
                                                        <a class="page-link" href="#" onclick="roomPage(${currentPage - 1})">Previous</a>
                                                    </li>`;

                                            for (let i = 1; i <= totalPages; i++) {
                                                paginationHtml += `
                                                        <li class="page-item${i === currentPage ? ' active' : ''}">
                                                            <a class="page-link" href="#" onclick="roomPage(${i})">${i}</a>
                                                        </li>`;
                                            }

                                            paginationHtml += `
                                                        <li class="page-item${currentPage === totalPages ? ' disabled' : ''}">
                                                            <a class="page-link" href="#" onclick="roomPage(${currentPage + 1})">Next</a>
                                                        </li>`;

                                            paginationDom.innerHTML = paginationHtml;
                                        } else {
                                            paginationDom.innerHTML = '';
                                        }

                                    })
                                    .catch((error) => console.error(error));
                            }

                            function editRoomById(roomId) {
                                window.location.href = `/room/${roomId}`;
                            }

                            function readRoomById(roomId) {
                                var myHeaders = new Headers();
                                var requestOptions = {
                                    method: 'GET',
                                    headers: myHeaders
                                };

                                fetch("http://localhost:1005/api/room/" + roomId, requestOptions)
                                    .then(response => response.json())
                                    .then(room => {

                                        const existingModal = document.getElementById('roomModal');
                                        if (existingModal) {
                                            existingModal.remove();
                                        }
                                        const modalHtml = `
                        <div class="modal fade" id="roomModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="exampleModalLabel">Full Details</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <div class="row">
                                            <div class="col-sm-4">
                                                <strong>Block Code</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                <strong> : </strong>${room.blockCode}
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-4">
                                                <strong>Floor Number</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                <strong> : </strong>${room.floorNumber}
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-4">
                                                <strong>Room Number</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                <strong> : </strong>${room.roomNumber}
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-4">
                                                <strong>Room Capacity</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                <strong> : </strong>${room.roomCapacity}
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-4">
                                                <strong>Status</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                <strong> : </strong>${room.isActive === 1 ? 'Active' : 'InActive'}
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-4">
                                                <strong>AirConditioner</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                <strong> : </strong>${room.isAirConditioner === 1 ? 'Yes' : 'No'}
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-4">
                                                <strong>Created At</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                <strong> : </strong>${room.createdTimeStamp}
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-4">
                                                <strong>Created By</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                <strong> : </strong>${room.createdFirstName} ${room.createdLastName}
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-4">
                                                <strong>updated At</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                <strong> : </strong>${room.updatedTimeStamp}
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-4">
                                                <strong>updated By</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                <strong> : </strong>${room.updatedFirstName !== null ? room.updatedFirstName : '---'} ${room.updatedLastName !== null ? room.updatedLastName : ''}
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>`;
                                        document.body.insertAdjacentHTML('beforeend', modalHtml);
                                        var modal = new bootstrap.Modal(document.getElementById('roomModal'));
                                        modal.show();

                                    })
                                    .catch(error => console.log('error', error));
                            }


                            function deleteRoomById(roomId) {
                                var validateDelete = confirm('are you sure you want to delete?')

                                if (!validateDelete)
                                    return

                                var requestOptions = {
                                    method: 'DELETE',
                                };

                                fetch("http://localhost:1005/api/room/" + roomId, requestOptions)
                                    .then(response => response.text())
                                    .then(deleted =>
                                        window.location = '/room'
                                    )
                                    .catch(error => console.log('error', error));
                            }

                            window.addEventListener('load', () => {
                                roomPage()
                            })

                        </script>
                        <%- include('../../partials/footer.ejs') %>